Caching the Inverse of a Matrix

Matrix inversion is usually a costly computation and there may be some benefit to caching the inverse of a matrix rather than compute it repeatedly. 

The first function:

makeCacheMatrix: This function creates a special "matrix" object that can cache its inverse.

The second function:

cacheSolve: This function computes the inverse of the special "matrix" returned by makeCacheMatrix above. 
If the inverse has already been calculated (and the matrix has not changed), then the cachesolve should retrieve the inverse from the cache.
Computing the inverse of a square matrix can be done with the solve function in R.
For example, if X is a square invertible matrix, then solve(X) returns its inverse.

Not:
Assume that the matrix supplied is always invertible.

## Output

## Create a matrix
## x <- matrix(1:4,2,2)
## x
##      [,1] [,2]
## [1,]    1    3
## [2,]    2    4

## Cache the matrix
## y <- makeCacheMatrix(x) y$get()

## 1. Run (with no cache)
## cacheSolve(y)
##      [,1] [,2]
## [1,]   -2  1.5
## [2,]    1 -0.5

## If you want to compare the result 
#  solve (x)

## 2. Run (with cache)
## cacheSolve(y)
## Getting cached data.
##      [,1] [,2]
## [1,]   -2  1.5
## [2,]    1 -0.5